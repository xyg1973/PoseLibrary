# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Library_Frame.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PySide2 import QtCore, QtGui, QtWidgets


class Library_Frame(QtWidgets.QFrame):
    def __init__(self, parent=None):
        super(Library_Frame, self).__init__(parent)
        self.setupUi(self)
        self.retranslateUi(self)
    def setupUi(self, Library_Frame):
        Library_Frame.setObjectName("Library_Frame")
        Library_Frame.resize(408, 329)
        Library_Frame.setStyleSheet("QFrame{\n"
"    background-color:rgb(48, 49, 53);\n"
"    border-radius:0px;\n"
"}\n"
"\n"
"\n"
"QScrollBar:vertical {\n"
"border: 0px ;\n"
"background-color:rgba(48, 49, 53,0);\n"
"width:6px;\n"
"}\n"
"QScrollBar::handle:vertical{\n"
"background:rgb(162, 162, 162);\n"
"min-height: 0px;\n"
"}\n"
"QScrollBar::add-line:vertical {\n"
"background: rgb(255, 0, 0);\n"
"       height: 0px;\n"
"     subcontrol-position: bottom;\n"
"        subcontrol-origin: margin;\n"
"    }\n"
"#QScrollBar::sub-line:vertical {\n"
" background: rgb(0, 255, 17);\n"
"    height: 0 px;\n"
"     subcontrol-position: top;\n"
"  subcontrol-origin: margin;\n"
"    }")
        self.verticalLayout = QtWidgets.QVBoxLayout(Library_Frame)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout_A = QtWidgets.QHBoxLayout()
        self.horizontalLayout_A.setContentsMargins(3, 3, 5, 0)
        self.horizontalLayout_A.setSpacing(0)
        self.horizontalLayout_A.setObjectName("horizontalLayout_A")
        self.Btn_Menu = QtWidgets.QPushButton(Library_Frame)
        self.Btn_Menu.setStyleSheet("QPushButton {\n"
"    background-color:transparent;\n"
"    color: rgb(255, 255, 255);\n"
"    border-style: outset;\n"
"    border-width: 0px;\n"
"    border-radius: 3px;\n"
"    border-color: beige;\n"
"    padding: 2px;\n"
"    text-align:left\n"
"}\n"
"QPushButton:hover {\n"
"    background-color: rgb(150, 150, 150);\n"
"}\n"
"QPushButton:pressed {\n"
"    background-color:  rgb(210, 210, 210);\n"
"    border-style: inset;\n"
"}")
        self.Btn_Menu.setObjectName("Btn_Menu")
        self.horizontalLayout_A.addWidget(self.Btn_Menu)
        self.Btn_Expand = QtWidgets.QPushButton(Library_Frame)
        self.Btn_Expand.setStyleSheet("QPushButton {\n"
"    background-color:transparent;\n"
"    color: rgb(255, 255, 255);\n"
"    border-style: outset;\n"
"    border-width: 0px;\n"
"    border-radius: 3px;\n"
"    border-color: beige;\n"
"    padding: 2px;\n"
"    text-align:left\n"
"}\n"
"QPushButton:hover {\n"
"    background-color: rgb(150, 150, 150);\n"
"}\n"
"QPushButton:pressed {\n"
"    background-color:  rgb(210, 210, 210);\n"
"    border-style: inset;\n"
"}")
        self.Btn_Expand.setObjectName("Btn_Expand")
        self.horizontalLayout_A.addWidget(self.Btn_Expand)
        self.Btn_Back = QtWidgets.QPushButton(Library_Frame)
        self.Btn_Back.setStyleSheet("QPushButton {\n"
"    background-color:transparent;\n"
"    color: rgb(255, 255, 255);\n"
"    border-style: outset;\n"
"    border-width: 0px;\n"
"    border-radius: 3px;\n"
"    border-color: beige;\n"
"    padding: 2px;\n"
"    text-align:left\n"
"}\n"
"QPushButton:hover {\n"
"    background-color: rgb(150, 150, 150);\n"
"}\n"
"QPushButton:pressed {\n"
"    background-color:  rgb(210, 210, 210);\n"
"    border-style: inset;\n"
"}\n"
"")
        self.Btn_Back.setObjectName("Btn_Back")
        self.horizontalLayout_A.addWidget(self.Btn_Back)
        self.Btn_Forward = QtWidgets.QPushButton(Library_Frame)
        self.Btn_Forward.setStyleSheet("QPushButton {\n"
"    background-color:transparent;\n"
"    color: rgb(255, 255, 255);\n"
"    border-style: outset;\n"
"    border-width: 0px;\n"
"    border-radius: 3px;\n"
"    border-color: beige;\n"
"    padding: 2px;\n"
"    text-align:left\n"
"}\n"
"QPushButton:hover {\n"
"    background-color: rgb(150, 150, 150);\n"
"}\n"
"QPushButton:pressed {\n"
"    background-color:  rgb(210, 210, 210);\n"
"    border-style: inset;\n"
"}")
        self.Btn_Forward.setObjectName("Btn_Forward")
        self.horizontalLayout_A.addWidget(self.Btn_Forward)
        self.Btn_Force = QtWidgets.QPushButton(Library_Frame)
        self.Btn_Force.setStyleSheet("QPushButton {\n"
"    background-color:transparent;\n"
"    color: rgb(255, 255, 255);\n"
"    border-style: outset;\n"
"    border-width: 0px;\n"
"    border-radius: 3px;\n"
"    border-color: beige;\n"
"    padding: 2px;\n"
"    text-align:left\n"
"}\n"
"QPushButton:hover {\n"
"    background-color: rgb(150, 150, 150);\n"
"}\n"
"QPushButton:pressed {\n"
"    background-color:  rgb(210, 210, 210);\n"
"    border-style: inset;\n"
"}")
        self.Btn_Force.setObjectName("Btn_Force")
        self.horizontalLayout_A.addWidget(self.Btn_Force)
        spacerItem = QtWidgets.QSpacerItem(5, 5, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_A.addItem(spacerItem)
        self.Btn_Search = QtWidgets.QPushButton(Library_Frame)
        self.Btn_Search.setStyleSheet("QPushButton {\n"
"    background-color:transparent;\n"
"    color: rgb(255, 255, 255);\n"
"    border-style: outset;\n"
"    border-width: 0px;\n"
"    border-radius: 3px;\n"
"    border-color: beige;\n"
"    padding: 2px;\n"
"    text-align:left\n"
"}\n"
"QPushButton:hover {\n"
"    background-color: rgb(150, 150, 150);\n"
"}\n"
"QPushButton:pressed {\n"
"    background-color:  rgb(210, 210, 210);\n"
"    border-style: inset;\n"
"}")
        self.Btn_Search.setObjectName("Btn_Search")
        self.horizontalLayout_A.addWidget(self.Btn_Search)
        self.lineEdit_Search_2 = QtWidgets.QLineEdit(Library_Frame)
        self.lineEdit_Search_2.setAutoFillBackground(False)
        self.lineEdit_Search_2.setStyleSheet("QLineEdit{\n"
"background-color: rgb(38, 39, 42);\n"
"color:rgb(255, 255, 255);\n"
"border-radius: 5px; \n"
"border: 1px solid rgb(17, 17, 17);\n"
"padding: 2px;\n"
"}\n"
"")
        self.lineEdit_Search_2.setInputMethodHints(QtCore.Qt.ImhNone)
        self.lineEdit_Search_2.setText("")
        self.lineEdit_Search_2.setObjectName("lineEdit_Search_2")
        self.horizontalLayout_A.addWidget(self.lineEdit_Search_2)
        self.verticalLayout.addLayout(self.horizontalLayout_A)
        self.horizontalLayout_B = QtWidgets.QHBoxLayout()
        self.horizontalLayout_B.setObjectName("horizontalLayout_B")
        self.CBox_Type = QtWidgets.QComboBox(Library_Frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.CBox_Type.sizePolicy().hasHeightForWidth())
        self.CBox_Type.setSizePolicy(sizePolicy)
        self.CBox_Type.setStyleSheet("QComboBox {\n"
"    background-color:transparent;\n"
"    color: rgb(255, 255, 255);\n"
"    border-style: outset;\n"
"    border-width: 0px;\n"
"    border-radius: 3px;\n"
"    border-color: beige;\n"
"    padding: 2px;\n"
"    text-align:left\n"
"}\n"
"QPushButton:hover {\n"
"    background-color: rgb(150, 150, 150);\n"
"}\n"
"QPushButton:pressed {\n"
"    background-color:  rgb(210, 210, 210);\n"
"    border-style: inset;\n"
"}")
        self.CBox_Type.setObjectName("CBox_Type")
        self.CBox_Type.addItem("")
        self.horizontalLayout_B.addWidget(self.CBox_Type)
        self.CBox_Time = QtWidgets.QComboBox(Library_Frame)
        self.CBox_Time.setStyleSheet("QComboBox {\n"
"    background-color:transparent;\n"
"    color: rgb(255, 255, 255);\n"
"    border-style: outset;\n"
"    border-width: 0px;\n"
"    border-radius: 3px;\n"
"    border-color: beige;\n"
"    padding: 2px;\n"
"    text-align:left\n"
"}\n"
"QPushButton:hover {\n"
"    background-color: rgb(150, 150, 150);\n"
"}\n"
"QPushButton:pressed {\n"
"    background-color:  rgb(210, 210, 210);\n"
"    border-style: inset;\n"
"}")
        self.CBox_Time.setObjectName("CBox_Time")
        self.horizontalLayout_B.addWidget(self.CBox_Time)
        self.CBox_Label = QtWidgets.QComboBox(Library_Frame)
        self.CBox_Label.setStyleSheet("QComboBox {\n"
"    background-color:transparent;\n"
"    color: rgb(255, 255, 255);\n"
"    border-style: outset;\n"
"    border-width: 0px;\n"
"    border-radius: 3px;\n"
"    border-color: beige;\n"
"    padding: 2px;\n"
"    text-align:left\n"
"}\n"
"QPushButton:hover {\n"
"    background-color: rgb(150, 150, 150);\n"
"}\n"
"QPushButton:pressed {\n"
"    background-color:  rgb(210, 210, 210);\n"
"    border-style: inset;\n"
"}")
        self.CBox_Label.setObjectName("CBox_Label")
        self.horizontalLayout_B.addWidget(self.CBox_Label)
        self.CBox_Path = QtWidgets.QComboBox(Library_Frame)
        self.CBox_Path.setStyleSheet("QComboBox {\n"
"    background-color:transparent;\n"
"    color: rgb(255, 255, 255);\n"
"    border-style: outset;\n"
"    border-width: 0px;\n"
"    border-radius: 3px;\n"
"    border-color: beige;\n"
"    padding: 2px;\n"
"    text-align:left\n"
"}\n"
"QPushButton:hover {\n"
"    background-color: rgb(150, 150, 150);\n"
"}\n"
"QPushButton:pressed {\n"
"    background-color:  rgb(210, 210, 210);\n"
"    border-style: inset;\n"
"}")
        self.CBox_Path.setObjectName("CBox_Path")
        self.horizontalLayout_B.addWidget(self.CBox_Path)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_B.addItem(spacerItem1)
        self.horizontalSlider = QtWidgets.QSlider(Library_Frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.horizontalSlider.sizePolicy().hasHeightForWidth())
        self.horizontalSlider.setSizePolicy(sizePolicy)
        self.horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider.setObjectName("horizontalSlider")
        self.horizontalLayout_B.addWidget(self.horizontalSlider)
        self.verticalLayout.addLayout(self.horizontalLayout_B)
        self.horizontalLayout_C = QtWidgets.QHBoxLayout()
        self.horizontalLayout_C.setObjectName("horizontalLayout_C")
        self.Lbl_Subfile = QtWidgets.QLabel(Library_Frame)
        self.Lbl_Subfile.setStyleSheet("QLabel{\n"
"    background-color:transparent;\n"
"    color:rgb(176, 176, 176);\n"
"    border-style: outset;\n"
"    border-width: 0px;\n"
"    border-radius: 3px;\n"
"    border-color: beige;\n"
"    padding: 2px;\n"
"    text-align:left\n"
"}\n"
"")
        self.Lbl_Subfile.setObjectName("Lbl_Subfile")
        self.horizontalLayout_C.addWidget(self.Lbl_Subfile)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_C.addItem(spacerItem2)
        self.CekBox_Subfile = QtWidgets.QCheckBox(Library_Frame)
        self.CekBox_Subfile.setStyleSheet("QCheckBox{\n"
"    background-color:transparent;\n"
"    color:rgb(176, 176, 176);\n"
"    border-style: outset;\n"
"    border-width: 0px;\n"
"    border-radius: 3px;\n"
"    border-color: beige;\n"
"    padding: 2px;\n"
"    text-align:left\n"
"}\n"
"")
        self.CekBox_Subfile.setObjectName("CekBox_Subfile")
        self.horizontalLayout_C.addWidget(self.CekBox_Subfile)
        self.verticalLayout.addLayout(self.horizontalLayout_C)
        self.tableWidget = QtWidgets.QTableWidget(Library_Frame)
        self.tableWidget.setStyleSheet("QTableWidget\n"
"{\n"
"background-color: transparent;\n"
"color:rgb(255, 255, 255);\n"
"border: 0px solid rgb(17, 17, 17);\n"
"}    \n"
"QTableWidget::item {\n"
"    background-color:transparent;\n"
"    color: rgb(255, 255, 255);\n"
"    border-style: outset;\n"
"    border-width: 0px;\n"
"    border-radius: 3px;\n"
"    border-color: beige;\n"
"    padding: 2px;\n"
"    text-align:left\n"
"}\n"
"QTableWidget::item:hover {\n"
"    background-color: rgb(150, 150, 150);\n"
"}\n"
"QTableWidget::item:pressed {\n"
"    background-color:  rgb(210, 210, 210);\n"
"    border-style: inset;\n"
"}\n"
"\n"
"\n"
"\n"
"")
        self.tableWidget.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.tableWidget.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.tableWidget.setShowGrid(False)
        self.tableWidget.setGridStyle(QtCore.Qt.NoPen)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(0)
        self.tableWidget.setRowCount(0)
        self.tableWidget.horizontalHeader().setVisible(False)
        self.tableWidget.horizontalHeader().setHighlightSections(True)
        self.tableWidget.verticalHeader().setVisible(False)
        self.verticalLayout.addWidget(self.tableWidget)
        self.progressBar = QtWidgets.QProgressBar(Library_Frame)
        self.progressBar.setMinimumSize(QtCore.QSize(0, 5))
        self.progressBar.setMaximumSize(QtCore.QSize(16777215, 5))
        font = QtGui.QFont()
        font.setPointSize(1)
        self.progressBar.setFont(font)
        self.progressBar.setProperty("value", 25)
        self.progressBar.setOrientation(QtCore.Qt.Horizontal)
        self.progressBar.setInvertedAppearance(False)
        self.progressBar.setTextDirection(QtWidgets.QProgressBar.TopToBottom)
        self.progressBar.setObjectName("progressBar")
        self.verticalLayout.addWidget(self.progressBar)

        self.retranslateUi(Library_Frame)
        QtCore.QMetaObject.connectSlotsByName(Library_Frame)

    def retranslateUi(self, Library_Frame):
        _translate = QtCore.QCoreApplication.translate
        Library_Frame.setWindowTitle(_translate("Library_Frame", "Frame"))
        self.Btn_Menu.setText(_translate("Library_Frame", "三"))
        self.Btn_Expand.setText(_translate("Library_Frame", "田"))
        self.Btn_Back.setText(_translate("Library_Frame", "<"))
        self.Btn_Forward.setText(_translate("Library_Frame", ">"))
        self.Btn_Force.setText(_translate("Library_Frame", "force"))
        self.Btn_Search.setText(_translate("Library_Frame", "搜索"))
        self.CBox_Type.setItemText(0, _translate("Library_Frame", "类型"))
        self.Lbl_Subfile.setText(_translate("Library_Frame", "子文件夹"))
        self.CekBox_Subfile.setText(_translate("Library_Frame", "显示子文件夹内容"))
